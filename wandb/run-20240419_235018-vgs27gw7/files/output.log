

  0%|          | 1/869 [01:38<23:46:59, 98.64s/it]




  1%|          | 5/869 [06:50<19:04:24, 79.47s/it]




  1%|          | 9/869 [11:53<18:18:34, 76.65s/it]






  2%|▏         | 15/869 [19:35<18:24:40, 77.61s/it]





  2%|▏         | 20/869 [25:59<18:04:37, 76.65s/it]





  3%|▎         | 25/869 [32:18<17:49:43, 76.05s/it]




  3%|▎         | 29/869 [37:21<17:42:30, 75.89s/it]






  4%|▍         | 35/869 [44:57<17:37:50, 76.10s/it]





  5%|▍         | 40/869 [51:19<17:35:15, 76.38s/it]





  5%|▌         | 45/869 [57:40<17:29:14, 76.40s/it]




  6%|▌         | 50/869 [1:04:00<17:19:01, 76.12s/it]
  6%|▋         | 6/94 [00:01<00:15,  5.65it/s]
























100%|██████████| 94/94 [00:45<00:00,  1.20it/s]
  6%|▌         | 50/869 [1:05:03<17:19:01, 76.1/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/torch/nn/modules/module.py:1877: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(




  6%|▋         | 55/869 [1:13:15<20:09:14, 89.13s/it]





  7%|▋         | 60/869 [1:19:41<17:50:42, 79.41s/it]





  7%|▋         | 65/869 [1:26:05<17:12:26, 77.05s/it]




  8%|▊         | 69/869 [1:31:08<16:56:23, 76.23s/it]






  9%|▊         | 75/869 [1:38:44<16:46:17, 76.04s/it]




  9%|▉         | 79/869 [1:43:51<16:49:02, 76.64s/it]






 10%|▉         | 85/869 [1:51:31<16:40:40, 76.58s/it]




 10%|█         | 89/869 [1:56:38<16:37:03, 76.70s/it]





 11%|█         | 94/869 [2:03:02<16:30:43, 76.70s/it]





 11%|█▏        | 99/869 [2:09:23<16:18:14, 76.23s/it]
 12%|█▏        | 100/869 [2:10:40<16:19:41, 76.44s/it]








  File "/bask/projects/p/phwq4930-gbm/Zeyu/PathVLM/source/PathLLM/run.py", line 217, in <module>
    trainer.train(resume_from_checkpoint=script_args.resume_from_checkpoint)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 1780, in train
    return inner_training_loop(
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 2193, in _inner_training_loop
    self._maybe_log_save_evaluate(tr_loss, grad_norm, model, trial, epoch, ignore_keys_for_eval)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 2577, in _maybe_log_save_evaluate
    metrics = self.evaluate(ignore_keys=ignore_keys_for_eval)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 3365, in evaluate
    output = eval_loop(
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 3580, in evaluation_loop
    preds_host = logits if preds_host is None else nested_concat(preds_host, logits, padding_index=-100)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer_pt_utils.py", line 140, in nested_concat
    return torch_pad_and_concatenate(tensors, new_tensors, padding_index=padding_index)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer_pt_utils.py", line 105, in torch_pad_and_concatenate
    result = tensor1.new_full(new_shape, padding_index)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.75 GiB. GPU 0 has a total capacity of 79.15 GiB of which 18.37 GiB is free. Including non-PyTorch memory, this process has 60.77 GiB memory in use. Of the allocated memory 37.66 GiB is allocated by PyTorch, and 22.03 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Traceback (most recent call last):
  File "/bask/projects/p/phwq4930-gbm/Zeyu/PathVLM/source/PathLLM/run.py", line 217, in <module>
    trainer.train(resume_from_checkpoint=script_args.resume_from_checkpoint)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 1780, in train
    return inner_training_loop(
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 2193, in _inner_training_loop
    self._maybe_log_save_evaluate(tr_loss, grad_norm, model, trial, epoch, ignore_keys_for_eval)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 2577, in _maybe_log_save_evaluate
    metrics = self.evaluate(ignore_keys=ignore_keys_for_eval)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 3365, in evaluate
    output = eval_loop(
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer.py", line 3580, in evaluation_loop
    preds_host = logits if preds_host is None else nested_concat(preds_host, logits, padding_index=-100)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer_pt_utils.py", line 140, in nested_concat
    return torch_pad_and_concatenate(tensors, new_tensors, padding_index=padding_index)
  File "/bask/projects/p/phwq4930-gbm/Zeyu/pyvenv/pathllmGZY/lib/python3.10/site-packages/transformers/trainer_pt_utils.py", line 105, in torch_pad_and_concatenate
    result = tensor1.new_full(new_shape, padding_index)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.75 GiB. GPU 0 has a total capacity of 79.15 GiB of which 18.37 GiB is free. Including non-PyTorch memory, this process has 60.77 GiB memory in use. Of the allocated memory 37.66 GiB is allocated by PyTorch, and 22.03 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)